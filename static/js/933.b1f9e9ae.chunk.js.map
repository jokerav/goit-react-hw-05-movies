{"version":3,"file":"static/js/933.b1f9e9ae.chunk.js","mappings":"0MAMMA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,iCAyD9B,UAvDkB,WAChB,OAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,UAChC,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KA6BA,OAJAC,EAAAA,EAAAA,YAAU,WAbO,IAAAC,EACA,QADAA,EAcNR,IAVTS,IAAAA,IAAA,oHAGsGD,EAHtG,gCAKGE,MAAK,SAAAC,GACJL,EAAUK,EAASC,KAAKC,cAK3B,CAACb,KAGF,iCACE,kBAAMc,SAzBO,SAAAC,GACfA,EAAEC,iBACFjB,EAAgB,CAAEC,OAAQG,EAAMc,cAAcC,SAC9Cd,EAASD,EAAMc,cAAcC,SAsB3B,WACE,kBACEC,SA/BS,SAAAJ,GACf,IAAQK,EAAUL,EAAEM,cAAZD,MACRhB,EAASgB,IA8BHA,MAAOjB,EACPmB,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,mBAAQH,KAAK,SAAb,UACE,0CAIHlB,EAAOsB,OAAS,IAAK,SAAChC,EAAD,CAAYU,OAAQA","sources":["views/FindMovie/FindMovie.jsx"],"sourcesContent":["import { useEffect, lazy } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\n\n// import MoviesList from '../MoviуsList/MoviуsList';\nconst MoviesList = lazy(() => import('../MoviesList/MoviesList'));\n\nconst FindMovie = () => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const querry = searchParams.get('querry');\n  const [input, setInput] = useState(querry);\n  const [movies, setMovies] = useState([]);\n\n  const onChange = e => {\n    const { value } = e.currentTarget;\n    setInput(value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ querry: input.toLowerCase().trim() });\n    setInput(input.toLowerCase().trim());\n  };\n\n  const getMovie = search => {\n    if (search === null) {\n      return;\n    }\n    axios\n      .get(\n        `\nhttps://api.themoviedb.org/3/search/movie?api_key=9e5cf4f45ae60b7760108794dc459813&language=en-US&query=${search}&page=1&include_adult=false`\n      )\n      .then(response => {\n        setMovies(response.data.results);\n      });\n  };\n  useEffect(() => {\n    getMovie(querry);\n  }, [querry]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={input}\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default FindMovie;\n"],"names":["MoviesList","lazy","useSearchParams","searchParams","setSearchParams","querry","get","useState","input","setInput","movies","setMovies","useEffect","search","axios","then","response","data","results","onSubmit","e","preventDefault","toLowerCase","trim","onChange","value","currentTarget","name","type","autoComplete","autoFocus","placeholder","length"],"sourceRoot":""}