{"version":3,"file":"static/js/933.ff538fb1.chunk.js","mappings":"4QAEMA,EAAO,mCAAG,WAAMC,GAAN,uFACSC,IAAAA,IAAA,+CAEYD,EAFZ,qEADT,cACRE,EADQ,yBAKPA,EAASC,KAAKC,MALP,2CAAH,sDAQPC,EAAQ,mCAAG,WAAMC,GAAN,0EACA,OAAXA,EADW,iEAIQL,IAAAA,IAAA,oHAEiFK,EAFjF,gCAJR,cAITJ,EAJS,yBAQRA,EAASC,KAAKI,SARN,2CAAH,sDAURC,EAAgB,mCAAG,oGACAP,IAAAA,IACrB,4FAFqB,cACjBC,EADiB,yBAIhBA,EAASC,KAAKI,SAJE,2CAAH,sD,yFCdhBE,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,iCA4C9B,UA1CkB,WAChB,OAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,UAChC,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAgBA,OAJAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,IAASS,GAAQQ,MAAK,SAAAH,GAAM,OAAIC,GAAU,OAAID,SAC7C,CAACL,KAGF,iCACE,kBAAMS,SAZO,SAAAC,GACfA,EAAEC,iBACFZ,EAAgB,CAAEC,OAAQG,EAAMS,cAAcC,SAC9CT,EAASD,EAAMS,cAAcC,SAS3B,WACE,kBACEC,SAlBS,SAAAJ,GACf,IAAQK,EAAUL,EAAEM,cAAZD,MACRX,EAASW,IAiBHA,MAAOZ,EACPc,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,mBAAQH,KAAK,SAAb,UACE,0CAIHb,EAAOiB,OAAS,IAAK,SAAC3B,EAAD,CAAYU,OAAQA,S,+ECzCjC,SAASkB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["services/moviesApi.js","views/FindMovie/FindMovie.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import axios from 'axios';\n\nconst getCast = async movieId => {\n  const response = await axios.get(\n    `\nhttps://api.themoviedb.org/3/movie/${movieId}/credits?api_key=9e5cf4f45ae60b7760108794dc459813&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst getMovie = async search => {\n  if (search === null) {\n    return;\n  }\n  const response = await axios.get(\n    `\nhttps://api.themoviedb.org/3/search/movie?api_key=9e5cf4f45ae60b7760108794dc459813&language=en-US&query=${search}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\nconst getTrandingMovie = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=9e5cf4f45ae60b7760108794dc459813'\n  );\n  return response.data.results;\n};\nexport { getCast, getMovie, getTrandingMovie };\n//\n","import { useEffect, lazy } from 'react';\nimport { useState } from 'react';\nimport { getMovie } from 'services/moviesApi';\nimport { useSearchParams } from 'react-router-dom';\n\n// import MoviesList from '../MoviуsList/MoviуsList';\nconst MoviesList = lazy(() => import('../MoviesList/MoviesList'));\n\nconst FindMovie = () => {\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const querry = searchParams.get('querry');\n  const [input, setInput] = useState(querry);\n  const [movies, setMovies] = useState([]);\n\n  const onChange = e => {\n    const { value } = e.currentTarget;\n    setInput(value);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ querry: input.toLowerCase().trim() });\n    setInput(input.toLowerCase().trim());\n  };\n\n  useEffect(() => {\n    getMovie(querry).then(movies => setMovies([...movies]));\n  }, [querry]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={input}\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default FindMovie;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["getCast","movieId","axios","response","data","cast","getMovie","search","results","getTrandingMovie","MoviesList","lazy","useSearchParams","searchParams","setSearchParams","querry","get","useState","input","setInput","movies","setMovies","useEffect","then","onSubmit","e","preventDefault","toLowerCase","trim","onChange","value","currentTarget","name","type","autoComplete","autoFocus","placeholder","length","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}