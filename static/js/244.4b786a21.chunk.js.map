{"version":3,"file":"static/js/244.4b786a21.chunk.js","mappings":"oSAEMA,EAAO,mCAAG,WAAMC,GAAN,uFACSC,IAAAA,IAAA,+CAEYD,EAFZ,qEADT,cACRE,EADQ,yBAKPA,EAASC,KAAKC,MALP,2CAAH,sDAQPC,EAAQ,mCAAG,WAAMC,GAAN,0EACA,OAAXA,EADW,iEAIQL,IAAAA,IAAA,oHAEiFK,EAFjF,gCAJR,cAITJ,EAJS,yBAQRA,EAASC,KAAKI,SARN,2CAAH,sDAURC,EAAgB,mCAAG,oGACAP,IAAAA,IACrB,4FAFqB,cACjBC,EADiB,yBAIhBA,EAASC,KAAKI,SAJE,2CAAH,qDAMhBE,EAAe,mCAAG,WAAMT,GAAN,uFACCC,IAAAA,IAAA,6CACiBD,EADjB,6DADD,cAChBE,EADgB,yBAIfA,EAASC,MAJM,2CAAH,uD,mGCQrB,UA/Ba,WACX,OAA0CO,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OALAC,EAAAA,EAAAA,YAAU,WACRF,EAAS,IAAK,CAAEG,SAAS,KACzBR,EAAAA,EAAAA,MAAmBS,MAAK,SAAAC,GAAM,OAAIN,GAAiB,OAAIM,SACtD,CAACL,KAGF,iCACE,4CACA,wBACGF,EAAcQ,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,kBADjCH,EAAME,c,+ECtBV,SAASE,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["services/moviesApi.js","views/Home/Home.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import axios from 'axios';\n\nconst getCast = async movieId => {\n  const response = await axios.get(\n    `\nhttps://api.themoviedb.org/3/movie/${movieId}/credits?api_key=9e5cf4f45ae60b7760108794dc459813&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst getMovie = async search => {\n  if (search === null) {\n    return;\n  }\n  const response = await axios.get(\n    `\nhttps://api.themoviedb.org/3/search/movie?api_key=9e5cf4f45ae60b7760108794dc459813&language=en-US&query=${search}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\nconst getTrandingMovie = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=9e5cf4f45ae60b7760108794dc459813'\n  );\n  return response.data.results;\n};\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=9e5cf4f45ae60b7760108794dc459813&language=en-US`\n  );\n  return response.data;\n};\nexport { getCast, getMovie, getTrandingMovie, getMovieDetails };\n//\n","import { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getTrandingMovie } from '../../services/moviesApi';\nconst Home = () => {\n  const [trandingMovie, setTrandingMovie] = useState([]);\n  const navigate = useNavigate();\n  // const getTrandingMovie = () => {\n  //   axios\n  //     .get(\n  //       'https://api.themoviedb.org/3/trending/movie/day?api_key=9e5cf4f45ae60b7760108794dc459813'\n  //     )\n  //     .then(response => {\n  //       setTrandingMovie(response.data.results);\n  //     });\n  // };\n\n  useEffect(() => {\n    navigate('/', { replace: true });\n    getTrandingMovie().then(movies => setTrandingMovie([...movies]));\n  }, [navigate]);\n\n  return (\n    <>\n      <h1>Tranding today</h1>\n      <ul>\n        {trandingMovie.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Home;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["getCast","movieId","axios","response","data","cast","getMovie","search","results","getTrandingMovie","getMovieDetails","useState","trandingMovie","setTrandingMovie","navigate","useNavigate","useEffect","replace","then","movies","map","movie","to","id","original_title","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}